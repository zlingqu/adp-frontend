variables:
    DOCKER_REGIS_URL: "docker.dm-ai.cn" #docker仓库地址
    PROJECT_NAME: devops #项目代号，也是k8s的namespace的名字
    SERVER_NAME: adp-frontend #服务名
    IMAGE_TAG_NAME: "${DOCKER_REGIS_URL}/${PROJECT_NAME}/${SERVER_NAME}:${CI_COMMIT_SHA}"  #使用代码的commitid作为image的tag
    # IMAGE_TAG_NAME: "${DOCKER_REGIS_URL}/${PROJECT_NAME}/${SERVER_NAME}:${CI_RUNNER_TAGS}" #使用代码的tag名字作为image的tag

stages:
  - make_and_push_image
  - k8s_dev_deploy
  - k8s_prd_deploy


job_make_and_push_image:
  image:
    name: docker.dm-ai.cn/public/kaniko-executor:debug-v1.3.0
    entrypoint: [""]
  stage: make_and_push_image
  script:
    - echo "{\"auths\":{\"$DOCKER_REGISTRY_URL\":{\"username\":\"$DOCKER_REGISTRY_USERNAME\",\"password\":\"$DOCKER_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $IMAGE_TAG_NAME #使用kaniko代替dind/sokcet模式，打镜像和上传
    - echo "docker image is:" && echo $IMAGE_TAG_NAME
  only:
    - dev
  tags:
    - k8s-runner

job_k8s_dev_deploy:
  image:
    name: docker.dm-ai.cn/public/alpine:kubectl-1.18.10
  stage: k8s_dev_deploy
  script:
    - cd /root
    - echo $K8S_DEV_TOKEN|base64 -d > .kube/config
    - kubectl set image deployment/$SERVER_NAME $SERVER_NAME=$IMAGE_TAG_NAME -n $PROJECT_NAME
  only:
    - dev
  tags:
    - k8s-runner

job_k8s_prd_deploy:
  image:
    name: docker.dm-ai.cn/public/alpine:kubectl-1.18.10
  stage: k8s_prd_deploy
  script:
    - cd /root
    - echo $K8S_PRD_TOKEN|base64 -d > .kube/config
    - kubectl set image deployment/$SERVER_NAME $SERVER_NAME=$IMAGE_TAG_NAME -n $PROJECT_NAME
  only:
    - dev
  tags:
    - k8s-runner
  when: manual
